---
- hosts: localhost
  connection: local
  gather_facts: no

  # List of variables that allowed to be changed via command line arguments.
  vars:
    # Use "--force" to get rid local modifications in the repository (valuable if they
    # were made and you are sure you won't lose the codebase you wanted to contribute).
    force: no
    # You can use "--version=issues/62" to get the codebase from specific branch/tag.
    version: HEAD
    # While developing the package you can use "--repository=git@github.com:BR0kEN-/cikit.git"
    # to get the codebase by SSH or from a fork.
    repository: https://github.com/BR0kEN-/cikit.git
    # Use "--skip-fetch" to not perform a "git pull".
    skip_fetch: no

  tasks:
    - name: Define the variables
      set_fact:
        cikit_version_file: "{{ __selfdir__ }}/.version"

    - name: Ensure the current version is defined
      copy:
        dest: "{{ cikit_version_file }}"
        # Defaults to the "1.0.0" only if the file is missing.
        force: no
        content: 1.0.0
      become: yes

    - name: Get the current version of the package
      set_fact:
        cikit_current_version: "{{ lookup('file', cikit_version_file) }}"

    - name: Update the package
      git:
        repo: "{{ repository }}"
        dest: "{{ __selfdir__ }}"
        force: "{{ force }}"
        update: yes
        version: "{{ version }}"
        recursive: yes
        track_submodules: no
      when: not skip_fetch

    - name: Get the version of an updated package
      set_fact:
        # Read the version of the package we've just updated to.
        cikit_version: "{{ lookup('file', cikit_version_file) }}"

    # Run the migrations only when the version of CIKit has grown.
    - include_tasks: tasks/migrations/run.yml
      # A new version of CIKit is greater than current.
      when: cikit_version | version_compare(cikit_current_version, 'gt')
