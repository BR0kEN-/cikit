---
- name: Check whether MySQL is already installed
  stat:
    path: "{{ cikit_mysql.daemon }}"
  register: cikit_mysql_installed

- include: setup.yml
  when: not cikit_mysql_installed.stat.exists

- include: stop-daemon.yml

# Temporary directory is configured to be in shared memory (RAM).
- include: shm-tempdir.yml
  when: "'shm' in cikit_mysql.dirs.tmp"

- name: Compute memory for InnoDB boofers
  shell: "cat /proc/meminfo | awk '/MemTotal/ {print $2/1024*{{ cikit_mysqld_configuration.innodb_buffer_pool_size }}/100}'"
  register: cikit_mysql_innodb_buffer_pool_size

- name: Create MySQL configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  with_items:
    - src: mysqld.cnf.j2
      dest: /etc/mysql/mysql.conf.d/mysqld.cnf
      # 644
      mode: go-r,u-w

    - src: python-my.cnf.j2
      dest: /root/.my.cnf
      # 600
      mode: u-w

- name: Ensure MySQL service is enabled on boot
  service:
    name: mysql
    state: started
    enabled: yes

- name: Check password for root user
  become: "{{ ansible_user }}"
  shell: >
    mysql -u{{ cikit_mysql_user.name }} -p{{ cikit_mysql_user.pass }} -se "SELECT plugin FROM mysql.user WHERE User = '{{ cikit_mysql_user.name }}'"
  ignore_errors: yes
  register: cikit_mysql_access

# If provisioning occurs under "root" and the "plugin" column of "mysql.user"
# table has the "auth_socket", then password will be bypassed in cases when
# MySQL and system usernames are matched. In other words: "root" password will
# work for "root" system user, but won't work, for instance, for "jenkins".
- include: root-access.yml
  when: cikit_mysql_access.failed is defined or 'auth_socket' in cikit_mysql_access.stdout_lines

- name: Remove anonymous MySQL user
  mysql_user:
    name: ""
    state: absent

- name: Remove MySQL test database
  mysql_db:
    name: test
    state: absent
