---
- name: Set environment variable
  lineinfile:
    dest: /etc/environment
    line: '{{ item.key }}="{{ item.value }}"'
    regexp: "{{ item.value | regex_escape }}"
    insertbefore: BOF
  with_dict:
    # https://getcomposer.org/doc/03-cli.md#composer-home
    COMPOSER_HOME: "{{ cikit_composer.dirs.home }}"

- name: Install Composer
  shell: |-
    curl -sS https://getcomposer.org/installer | php -- --install-dir={{ cikit_composer.dirs.bin }} --filename={{ cikit_composer.bin }}
    chown -R {{ ansible_user }}:{{ ansible_user }} {{ cikit_composer.dirs.home }} {{ cikit_composer.dirs.bin }}/{{ cikit_composer.bin }}
  args:
    warn: no
    creates: "{{ cikit_composer.dirs.bin }}/{{ cikit_composer.bin }}"

- include_tasks: packages.yml
  args:
    name: "Install system packages"
    composer_packages: "{{ cikit_composer.system_packages }}"

- include_tasks: packages.yml
  args:
    name: "Install packages"

- name: Determine installed binaries
  shell: ls -A {{ cikit_composer.dirs.home }}/vendor/bin/ | grep -v '\..*'
  register: cikit_composer_bins

- name: Ensure installed binaries available globally
  file:
    src: "{{ cikit_composer.dirs.home }}/vendor/bin/{{ item }}"
    dest: "{{ cikit_composer.dirs.bin }}/{{ item }}"
    state: link
  with_items: "{{ cikit_composer_bins.stdout_lines if 'stdout_lines' in cikit_composer_bins else [] }}"

- name: Mark role as executed
  set_fact:
    cikit_composer_role_executed: yes
