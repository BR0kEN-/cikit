---
- name: Install Composer
  shell: "curl -sS https://getcomposer.org/installer | php -- --install-dir={{ cikit_composer.bin }}"
  args:
    warn: no

- name: Rename PHAR file
  shell: "mv composer.phar composer"
  args:
    chdir: "{{ cikit_composer.bin }}"

- name: Make Composer executable
  file:
    path: "{{ cikit_composer.bin }}/composer"
    mode: 0755

- name: Prepare directory for global Composer packages
  file:
    path: "{{ cikit_composer.dir }}"
    state: directory

- name: Install system packages
  include: packages.yml
  args:
    composer_packages: "{{ cikit_composer.system_packages }}"

- name: Create .config directory
  file:
    path: "{{ user_home.stdout }}/.config/composer"
    state: directory
    recurse: yes

- name: Create Composer config
  template:
    src: config.json.j2
    dest: "{{ user_home.stdout }}/.config/composer/config.json"

- name: Install packages
  include: packages.yml

- name: Determine Composer packages
  shell: ls -A {{ cikit_composer.dir }}/vendor/bin/ | grep -v '\..*'
  register: packages

- name: Make Composer packages executable
  file:
    src: "{{ cikit_composer.dir }}/vendor/bin/{{ item }}"
    dest: "{{ cikit_composer.bin }}/{{ item }}"
    state: link
  when: "'composer' != item"
  with_items: "{{ packages.stdout_lines if 'stdout_lines' in packages else [] }}"

- name: Mark role as executed
  set_fact:
    cikit_composer_role_executed: yes
