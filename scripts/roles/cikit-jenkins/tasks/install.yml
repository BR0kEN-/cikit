---
- import_tasks: repo.yml

- name: Copy configs
  template:
    src: "configs/{{ item | basename }}"
    dest: '{{ jenkins_lib }}/{{ item | basename | splitext | first }}'
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    force: yes
  with_fileglob: ../templates/configs/*.j2

- name: Copy user content
  copy:
    src: "../files/userContent"
    dest: "{{ jenkins_lib }}"
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"

- import_tasks: restart-service.yml
- import_tasks: cli.yml

- name: Install a plugin
  jenkins_plugin:
    url: "{{ jenkins_host }}"
    name: "{{ item.key }}"
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    updates_url: "{{ jenkins.updates.url }}"
    jenkins_home: "{{ jenkins_lib }}"
  with_dict: "{{ jenkins_plugins }}"

- name: Enable a plugin
  shell: |-
    curl {{ jenkins_host }}/pluginManager/installNecessaryPlugins \
      -H "Content-Type: text/xml" \
      -H "$({{ jenkins_csrf_command }})" \
      -d "<jenkins>{% for key, value in jenkins_plugins.iteritems() %}<install plugin='{{ key }}@{{ value }}' />{% endfor %}</jenkins>"
  args:
    warn: no
  failed_when: "'' != jenkins_plugins_status.stdout"
  register: jenkins_plugins_status

- import_tasks: restart-service.yml

- name: Execute script
  jenkins_script:
    url: "{{ jenkins_host }}"
    script: "{{ item }}"
  with_items:
    # Enable HTML markup.
    - |-
        import hudson.markup.RawHtmlMarkupFormatter
        Jenkins.instance.setMarkupFormatter(new RawHtmlMarkupFormatter(false))
        Jenkins.instance.save()

- name: Restart Nginx
  service:
    name: nginx
    state: restarted
  ignore_errors: yes

- name: Add a user to permitted groups
  user:
    name: "{{ jenkins_data.user }}"
    groups: shadow,adm
    append: yes

- name: Add a user to nopasswd sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "{{ jenkins_data.user }} ALL=(ALL) NOPASSWD:ALL"
