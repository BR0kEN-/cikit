---
- hosts: localhost
  gather_facts: no
  connection: local
  become: yes

  vars_files:
    - ../.cikit/config.yml
    - vars/main.yml
    - vars/tests.yml

  tasks:
    - include: tasks/environment/initialize.yml

    - name: Create directory for reports
      file:
        path: "{{ reports.dir }}"
        mode: 0755
        state: "{{ item }}"
      with_items: ["absent", "directory"]

    - name: Run PHPCS
      shell: "phpcs --standard={{ item }} --extensions={{ phpcs.extensions | join(',') }} -n {{ scan_dirs | join(' ') }} > '{{ reports.dir }}/[PHPCS] {{ item }}.txt'"
      args:
        chdir: "{{ project_workspace }}"
      with_items: "{{ phpcs.standards }}"
      # Needed for ignoring PHP notices in packages with sniffers.
      ignore_errors: yes

    - name: Run HTMLCS
      shell: "htmlcs {{ testing_url }}/{{ item.value.path }} {{ item.value.standard }} > '{{ reports.dir }}/[HTMLCS] {{ item.key }}.txt'"
      with_dict: "{{ htmlcs }}"

    - name: Run ESLint
      shell: "eslint {{ item }} --ignore-path ../scripts/configs/.eslintignore -c ../scripts/configs/.eslintrc -o '{{ reports.dir }}/ES Lint.txt'"
      args:
        chdir: "{{ project_workspace }}"
      with_items: "{{ scan_dirs }}"
      # Needed for ignoring exit status codes.
      ignore_errors: yes

    - name: Run SCSSLint
      shell: "scss-lint $(find {{ item }} -name '*.scss' -print) -c ../scripts/configs/scss-lint.yml -o '{{ reports.dir }}/SCSS Lint.txt'"
      args:
        chdir: "{{ project_workspace }}"
      with_items: "{{ scan_dirs }}"
      # Needed for ignoring exit status codes.
      ignore_errors: yes

    - name: Run CodeSpell
      shell: "codespell {{ item }} -S $(cat ../scripts/configs/.codespellignore | tr '\n' ',') > '{{ reports.dir }}/Code Spell.txt'"
      args:
        chdir: "{{ project_workspace }}"
      with_items: "{{ scan_dirs }}"
      # Needed for ignoring exit status codes.
      ignore_errors: yes

    - name: "Check existence of custom sniffers for {{ cmf | capitalize }}"
      stat:
        path: tasks/sniffers/main.yml
      register: is_custom_sniffers

    - include: "{{ is_custom_sniffers.stat.path }}"
      when: is_custom_sniffers.stat.exists

    - name: Look for available reports
      # The reason, why "printf" using instead of "echo".
      # https://github.com/ansible/ansible/issues/5206#issuecomment-38111435
      shell: >
        if [ ! -z "$(cat '{{ item }}' | xargs)" ]; then
          printf '\n- <a href="{{ reports.url }}/{{ item | basename }}">{{ item | basename | splitext | first }}</a>' >> {{ reports.comment }}
        fi
      with_fileglob: "{{ reports.dir }}/*.txt"
